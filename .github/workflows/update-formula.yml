name: Update Formula

on:
  repository_dispatch:
    types: [check-for-updates]
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:

jobs:
  update-formula:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com

      - name: Get latest release
        id: latest_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Use GitHub API with authentication to avoid rate limits
          latest_release=$(gh api repos/autobrr/mkbrr/releases/latest)
          
          # Extract version and validate it's not empty
          latest_version=$(echo "$latest_release" | jq -r .tag_name)
          if [ -z "$latest_version" ] || [ "$latest_version" = "null" ]; then
            echo "Error: Failed to get latest version"
            exit 1
          fi
          echo "version=${latest_version}" >> $GITHUB_OUTPUT
          
          download_url="https://github.com/autobrr/mkbrr/archive/refs/tags/${latest_version}.tar.gz"
          echo "download_url=${download_url}" >> $GITHUB_OUTPUT
          
          sha256=$(curl -sL "${download_url}" | sha256sum | cut -d ' ' -f 1)
          echo "sha256=${sha256}" >> $GITHUB_OUTPUT

      - name: Update Formula
        id: update
        run: |
          # Extract current version from the URL in the formula
          current_url=$(grep -m 1 'url "' Formula/mkbrr.rb | sed 's/.*url "\(.*\)"/\1/')
          current_version=$(echo "$current_url" | grep -oE 'v[0-9]+\.[0-9]+\.[0-9]+' | head -1)
          
          # Compare versions
          if [ "$current_version" != "${{ steps.latest_release.outputs.version }}" ]; then
            echo "Updating from $current_version to ${{ steps.latest_release.outputs.version }}"
            sed -i "s|url.*|url \"${{ steps.latest_release.outputs.download_url }}\"|" Formula/mkbrr.rb
            sed -i "s|sha256.*|sha256 \"${{ steps.latest_release.outputs.sha256 }}\"|" Formula/mkbrr.rb
            echo "updated=true" >> $GITHUB_OUTPUT
          else
            echo "Formula is already up to date with version $current_version"
            echo "updated=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        if: steps.update.outputs.updated == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "mkbrr ${{ steps.latest_release.outputs.version }}"
          title: "mkbrr ${{ steps.latest_release.outputs.version }}"
          body: |
            Updates mkbrr to ${{ steps.latest_release.outputs.version }}
            
            This PR was created automatically by the update-formula workflow.
          branch: update-mkbrr
          delete-branch: true
          labels: bump-formula-pr,go 